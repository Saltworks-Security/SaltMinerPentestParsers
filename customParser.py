# Copyright (C) Saltworks Security, LLC - All Rights Reserved
# Unauthorized copying of this file, via any medium is strictly prohibited
# Proprietary and confidential
# Written by Saltworks Security, LLC (www.saltworks.io) , 2024

import json
from SMIssueDocs import SMIssueDocs

class customParser:
    def __init__(self, issuesDoc, isTemplate=False) -> None:
        self.issuesDoc = issuesDoc
        self.parsedIssues = []
        self.isTemplate = isTemplate
        self.SMIssueDocs = SMIssueDocs()

    def parseIssues(self):

        for issue in self.issuesDoc:
            if self.isTemplate:
                parserTemplate = self.SMIssueDocs.dynamicParserTemplateIssueDoc()
                
            
            else:
                parserTemplate = self.SMIssueDocs.dynamicParserDoc()

            for category in issue.keys():
                for templateCategory in parserTemplate.keys():
                    for key in issue[category].keys():
                        for templateKey in parserTemplate[templateCategory].keys():
                            if templateCategory.lower() == category.lower():
                                if templateKey.lower() == key.lower():
                                    parserTemplate[templateCategory][templateKey] = issue[category][key]

            self.parsedIssues.append(parserTemplate)
        return self.parsedIssues
    
    

    # def parserDoc(self):
    #     parserDoc = {
    #         "Issue": {
    #             "AppVersion": " ",
    #             "Name": None,
    #             "Severity": None,
    #             "FoundDate": None,
    #             "TestStatus": None,
    #             "IsSuppressed": False,
    #             "IsFiltered": False,
    #             "RemovedDate": None,
    #             "Location": None,
    #             "LocationFull": None,
    #             "ReportId": None,
    #             "Category": None,
    #             "Classification": None,
    #             "Description": None,
    #             "Audited": False,
    #             "Auditor": None,
    #             "LastAudit": None,
    #             "Enumeration": None,
    #             "Proof": None,
    #             "TestingInstructions": None,
    #             "Details": None,
    #             "Implication": None,
    #             "Recommendation": None,
    #             "References": None,
    #             "Reference": None,
    #             "Vendor": None,
    #             "Product": None,
    #             "Base": 0,
    #             "Environmental": 0,
    #             "Temporal": 0,
    #             "ScoreVersion": None,
    #             "Attributes": None
    #         },
    #         "Asset": {
    #             "AppVersion": " ",
    #             "Name": None,
    #             "Description": None,
    #             "VersionId": None,
    #             "Version": None,
    #             "Host": None,
    #             "Ip": None,
    #             "Schema": None,
    #             "Port": 0,
    #             "SourceId": None,
    #             "Attributes": None
    #         }
    #     }

    #     return parserDoc

    # def parserTemplateIssueDoc(self):
    #     parserTemplateIssueDoc = {
    #         "Issue": {
    #             "AppVersion": " ",
    #             "Name": None,
    #             "Severity": None,
    #             "FoundDate": None,
    #             "TestStatus": None,
    #             "IsSuppressed": False,
    #             "IsFiltered": False,
    #             "RemovedDate": None,
    #             "Location": None,
    #             "LocationFull": None,
    #             "ReportId": None,
    #             "Category": None,
    #             "Classification": None,
    #             "Description": None,
    #             "Audited": False,
    #             "Auditor": None,
    #             "LastAudit": None,
    #             "Enumeration": None,
    #             "Proof": None,
    #             "TestingInstructions": None,
    #             "Details": None,
    #             "Implication": None,
    #             "Recommendation": None,
    #             "References": None,
    #             "Reference": None,
    #             "Vendor": None,
    #             "Product": None,
    #             "Base": 0,
    #             "Environmental": 0,
    #             "Temporal": 0,
    #             "ScoreVersion": None,
    #             "Attributes": None
    #         }
    #     }

    #     return parserTemplateIssueDoc